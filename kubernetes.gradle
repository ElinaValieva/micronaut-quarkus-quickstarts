import org.apache.tools.ant.taskdefs.condition.Os

class KubernetesPluginExtension {
    String path
    String name
    String image
    Integer port
}

class KubernetesPlugin implements Plugin<Project> {

    void apply(Project project) {
        def directory = 'kubernetes'
        def kubernetesExtension = project.extensions.create('kubernetes', KubernetesPluginExtension)
        def openShiftExtension = project.extensions.create('openshift', KubernetesPluginExtension)

        project.task('deployKubernetes') {
            group = 'kubernetes'
            description = 'Kubernates Redeployment'
            doLast {
                project.exec {
                    workingDir("${directory}")
                    if (Os.isFamily(Os.FAMILY_WINDOWS))
                        commandLine 'cmd', '/c', "kubernetesDeploy.bat " +
                                "${kubernetesExtension.name} " +
                                "${kubernetesExtension.image}"
                    else
                        commandLine "./kubernetesDeploy " +
                                "${kubernetesExtension.name} " +
                                "${kubernetesExtension.image}"
                }
            }
        }

        project.task('kubernetesCreate') {
            group = 'kubernetes'
            description = 'Kubernates Deployment'

            doLast {
                project.exec {
                    workingDir("${directory}")
                    if (Os.isFamily(Os.FAMILY_WINDOWS))
                        commandLine 'cmd', '/c', "kubernetesCreate.bat " +
                                "${kubernetesExtension.name} " +
                                "${kubernetesExtension.image} " +
                                "${kubernetesExtension.path} " +
                                "${kubernetesExtension.port}"
                    else
                        commandLine "./kubernetesCreate " +
                                "${kubernetesExtension.name} " +
                                "${kubernetesExtension.image} " +
                                "${kubernetesExtension.path} " +
                                "${kubernetesExtension.port}"
                }
            }
        }

        project.task('openshiftCreate') {
            group = 'openshift'
            description = 'OpenShift Deployment'

            doLast {
                project.exec {
                    workingDir("${directory}")
                    if (Os.isFamily(Os.FAMILY_WINDOWS))
                        commandLine 'cmd', '/c', "openshiftCreate.bat " +
                                "${openShiftExtension.name} " +
                                "${openShiftExtension.image} " +
                                "${openShiftExtension.path}"
                    else
                        commandLine "./openshiftCreate " +
                                "${openShiftExtension.name} " +
                                "${openShiftExtension.image} " +
                                "${openShiftExtension.path}"
                }
            }
        }

        project.task('openshiftDeploy') {
            group = 'openshift'
            description = 'OpenShift Redeployment'

            doLast {
                project.exec {
                    workingDir("${directory}")
                    if (Os.isFamily(Os.FAMILY_WINDOWS))
                        commandLine 'cmd', '/c', "openshiftDeploy.bat " +
                                "${openShiftExtension.name} " +
                                "${openShiftExtension.image}"
                    else
                        commandLine "./openshiftDeploy " +
                                "${openShiftExtension.name} " +
                                "${openShiftExtension.image}"
                }
            }
        }
    }
}

apply plugin: 'java'
apply plugin: KubernetesPlugin
