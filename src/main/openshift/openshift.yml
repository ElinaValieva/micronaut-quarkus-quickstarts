---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  annotations:
    app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
    app: "micronaut-example"
  labels:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: "quarkus"
  name: "micronaut-example"
---
apiVersion: "v1"
kind: "Service"
metadata:
  annotations:
    app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
    app: "micronaut-example"
  labels:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: "quarkus"
  name: "micronaut-example"
spec:
  ports:
  - name: "http"
    port: 8090
    targetPort: 8090
  selector:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
  type: "ClusterIP"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  annotations:
    app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
    app: "micronaut-example"
  labels:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: "quarkus"
  name: "micronaut-example:view"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "view"
subjects:
- kind: "ServiceAccount"
  name: "micronaut-example"
---
apiVersion: "image.openshift.io/v1"
kind: "ImageStream"
metadata:
  annotations:
    app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
    app: "micronaut-example"
  labels:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: "quarkus"
  name: "micronaut-example"
spec: {}
---
apiVersion: "image.openshift.io/v1"
kind: "ImageStream"
metadata:
  annotations:
    app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
    app: "micronaut-example"
  labels:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: "quarkus"
  name: "s2i-java"
spec:
  dockerImageRepository: "fabric8/s2i-java"
---
apiVersion: "build.openshift.io/v1"
kind: "BuildConfig"
metadata:
  annotations:
    app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
    app: "micronaut-example"
  labels:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: "quarkus"
  name: "micronaut-example"
spec:
  output:
    to:
      kind: "ImageStreamTag"
      name: "micronaut-example:1.0.0"
  source:
    binary: {}
  strategy:
    sourceStrategy:
      from:
        kind: "ImageStreamTag"
        name: "s2i-java:2.3"
---
apiVersion: "apps.openshift.io/v1"
kind: "DeploymentConfig"
metadata:
  annotations:
    app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
    app: "micronaut-example"
  labels:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: "quarkus"
  name: "micronaut-example"
spec:
  replicas: 1
  selector:
    app.kubernetes.io/name: "micronaut-example"
    app.kubernetes.io/version: "1.0.0"
  template:
    metadata:
      annotations:
        app.quarkus.io/build-timestamp: "2020-05-26 - 07:57:17 +0000"
        app: "micronaut-example"
      labels:
        app.kubernetes.io/name: "micronaut-example"
        app.kubernetes.io/version: "1.0.0"
        app.openshift.io/runtime: "quarkus"
    spec:
      containers:
      - env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "elvaliev/micronaut-example:latest"
        imagePullPolicy: "Always"
        name: "micronaut-example"
        ports:
        - containerPort: 8090
          name: "http"
          protocol: "TCP"
      serviceAccount: "micronaut-example"
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - "micronaut-example"
      from:
        kind: "ImageStreamTag"
        name: "micronaut-example:latest"
    type: "ImageChange"
